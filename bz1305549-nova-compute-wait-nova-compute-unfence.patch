diff -uNr a/heartbeat/nova-compute-wait b/heartbeat/nova-compute-wait
--- a/heartbeat/nova-compute-wait	2017-02-02 11:23:38.263510362 +0100
+++ b/heartbeat/nova-compute-wait	2017-02-02 11:28:27.181650906 +0100
@@ -1,30 +1,15 @@
 #!/bin/sh
+# Copyright 2015 Red Hat, Inc.
 #
+# Description:  Manages compute daemons
 #
-# nova-compute-wait agent manages compute daemons.
+# Authors: Andrew Beekhof
 #
-# Copyright (c) 2015
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of version 2 of the GNU General Public License as
-# published by the Free Software Foundation.
-#
-# This program is distributed in the hope that it would be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-#
-# Further, this software is distributed without any warranty that it is
-# free of the rightful claim of any third person regarding infringement
-# or the like.  Any license provided herein, whether implied or
-# otherwise, applies only to this software file.  Patent licenses, if
-# any, provided herein do not apply to combinations of this program with
-# other software, or any other product whatsoever.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write the Free Software Foundation,
-# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
+# Support:      openstack@lists.openstack.org
+# License:      Apache Software License (ASL) 2.0
 #
 
+
 #######################################################################
 # Initialization:
 
@@ -137,6 +122,8 @@
 }
 
 nova_start() {
+    build_unfence_overlay
+
     state=$(attrd_updater -p -n evacuate -N ${NOVA_HOST} | sed -e 's/.*value=//' | tr -d '"' )
     if [ "x$state" = x ]; then
 	: never been fenced
@@ -147,8 +134,8 @@
 	sleep ${OCF_RESKEY_evacuation_delay}
 
     else
-	ocf_log info "Waiting for pending evacuations from ${NOVA_HOST}"
 	while [ "x$state" != "xno" ]; do
+	    ocf_log info "Waiting for pending evacuations from ${NOVA_HOST}"
 	    state=$(attrd_updater -p -n evacuate -N ${NOVA_HOST} | sed -e 's/.*value=//' | tr -d '"' )
 	    sleep 5
 	done
@@ -156,14 +143,22 @@
 	ocf_log info "Pausing to give evacuations from ${NOVA_HOST} time to complete"
 	sleep ${OCF_RESKEY_evacuation_delay}
     fi
+
+    touch "$statefile"
+
     return $OCF_SUCCESS
 }
 
 nova_stop() {
+    rm -f "$statefile"
     return $OCF_SUCCESS
 }
 
 nova_monitor() {
+    if [ ! -f "$statefile" ]; then
+        return $OCF_NOT_RUNNING
+    fi
+
     return $OCF_SUCCESS
 }
 
@@ -171,17 +166,113 @@
     return $OCF_SUCCESS
 }
 
+build_unfence_overlay() {
+    fence_options=""
+
+    if [ -z "${OCF_RESKEY_auth_url}" ]; then
+	candidates=$(/usr/sbin/stonith_admin -l ${NOVA_HOST})
+	for candidate in ${candidates}; do
+	    pcs stonith show $d | grep -q fence_compute
+	    if [ $? = 0 ]; then
+		ocf_log info "Unfencing nova based on: $candidate"
+		fence_auth=$(pcs stonith show $candidate | grep Attributes: | sed -e s/Attributes:// -e s/-/_/g -e 's/[^ ]\+=/OCF_RESKEY_\0/g' -e s/passwd/password/g)
+		eval "export $fence_auth"
+		break
+	    fi
+	done
+    fi    
+
+    # Copied from NovaEvacuate 
+    if [ -z "${OCF_RESKEY_auth_url}" ]; then
+        ocf_exit_reason "auth_url not configured"
+        exit $OCF_ERR_CONFIGURED
+    fi
+
+    fence_options="${fence_options} -k ${OCF_RESKEY_auth_url}"
+
+    if [ -z "${OCF_RESKEY_username}" ]; then
+        ocf_exit_reason "username not configured"
+        exit $OCF_ERR_CONFIGURED
+    fi
+
+    fence_options="${fence_options} -l ${OCF_RESKEY_username}"
+
+    if [ -z "${OCF_RESKEY_password}" ]; then
+        ocf_exit_reason "password not configured"
+        exit $OCF_ERR_CONFIGURED
+    fi
+
+    fence_options="${fence_options} -p ${OCF_RESKEY_password}"
+
+    if [ -z "${OCF_RESKEY_tenant_name}" ]; then
+        ocf_exit_reason "tenant_name not configured"
+        exit $OCF_ERR_CONFIGURED
+    fi
+
+    fence_options="${fence_options} -t ${OCF_RESKEY_tenant_name}"
+
+    if [ -n "${OCF_RESKEY_domain}" ]; then
+        fence_options="${fence_options} -d ${OCF_RESKEY_domain}"
+    fi
+
+    if [ -n "${OCF_RESKEY_region_name}" ]; then
+        fence_options="${fence_options} \
+            --region-name ${OCF_RESKEY_region_name}"
+    fi
+
+    if [ -n "${OCF_RESKEY_insecure}" ]; then
+        if ocf_is_true "${OCF_RESKEY_insecure}"; then
+            fence_options="${fence_options} --insecure"
+        fi
+    fi
+
+    if [ -n "${OCF_RESKEY_no_shared_storage}" ]; then
+        if ocf_is_true "${OCF_RESKEY_no_shared_storage}"; then
+            fence_options="${fence_options} --no-shared-storage"
+        fi
+    fi
+
+    if [ -n "${OCF_RESKEY_endpoint_type}" ]; then
+        case ${OCF_RESKEY_endpoint_type} in
+            adminURL|publicURL|internalURL)
+                ;;
+            *)
+                ocf_exit_reason "endpoint_type ${OCF_RESKEY_endpoint_type}" \
+                    "not valid. Use adminURL or publicURL or internalURL"
+                exit $OCF_ERR_CONFIGURED
+                ;;
+        esac
+        fence_options="${fence_options} -e ${OCF_RESKEY_endpoint_type}"
+    fi
+
+    mkdir -p /run/systemd/system/openstack-nova-compute.service.d
+    cat<<EOF>/run/systemd/system/openstack-nova-compute.service.d/unfence-20.conf
+[Service]
+ExecStartPost=/sbin/fence_compute ${fence_options} -o on -n ${NOVA_HOST}
+EOF
+}
+
 nova_validate() {
     rc=$OCF_SUCCESS
 
     check_binary crudini
     check_binary nova-compute
+    check_binary fence_compute
 
     if [ ! -f /etc/nova/nova.conf ]; then
 	   ocf_exit_reason "/etc/nova/nova.conf not found"
 	   exit $OCF_ERR_CONFIGURED
     fi
 
+    # Is the state directory writable?
+    state_dir=$(dirname $statefile)
+    touch "$state_dir/$$"
+    if [ $? != 0 ]; then
+        ocf_exit_reason "Invalid state directory: $state_dir"
+        return $OCF_ERR_ARGS
+    fi
+    rm -f "$state_dir/$$"
+
     NOVA_HOST=$(crudini --get /etc/nova/nova.conf DEFAULT host 2>/dev/null)
     if [ $? = 1 ]; then
         short_host=$(uname -n | awk -F. '{print $1}')
@@ -198,6 +289,8 @@
     return $rc
 }
 
+statefile="${HA_RSCTMP}/${OCF_RESOURCE_INSTANCE}.active"
+
 : ${OCF_RESKEY_evacuation_delay=120}
 case $__OCF_ACTION in
 meta-data)	meta_data
@@ -221,3 +314,4 @@
 rc=$?
 ocf_log debug "${OCF_RESOURCE_INSTANCE} $__OCF_ACTION : $rc"
 exit $rc
+
diff -uNr a/heartbeat/NovaEvacuate b/heartbeat/NovaEvacuate
--- a/heartbeat/NovaEvacuate	2017-02-02 11:23:38.253510461 +0100
+++ b/heartbeat/NovaEvacuate	2017-02-02 11:28:49.262432371 +0100
@@ -1,30 +1,16 @@
 #!/bin/sh
 #
+# Copyright 2015 Red Hat, Inc.
 #
-# NovaCompute agent manages compute daemons.
+# Description:  Manages evacuation of nodes running nova-compute
 #
-# Copyright (c) 2015
+# Authors: Andrew Beekhof
 #
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of version 2 of the GNU General Public License as
-# published by the Free Software Foundation.
-#
-# This program is distributed in the hope that it would be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-#
-# Further, this software is distributed without any warranty that it is
-# free of the rightful claim of any third person regarding infringement
-# or the like.  Any license provided herein, whether implied or
-# otherwise, applies only to this software file.  Patent licenses, if
-# any, provided herein do not apply to combinations of this program with
-# other software, or any other product whatsoever.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write the Free Software Foundation,
-# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
+# Support:      openstack@lists.openstack.org
+# License:      Apache Software License (ASL) 2.0
 #
 
+
 #######################################################################
 # Initialization:
 
@@ -180,7 +166,7 @@
 	    ocf_log notice "Initiating evacuation of $node"
 
 	    fence_compute ${fence_options} -o status -n ${node}
-	    if [ $? != 0 ]; then
+	    if [ $? = 1 ]; then
 		ocf_log info "Nova does not know about ${node}"
 		# Dont mark as no because perhaps nova is unavailable right now
 		continue
